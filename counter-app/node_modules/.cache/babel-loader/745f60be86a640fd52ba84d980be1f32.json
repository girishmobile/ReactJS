{"ast":null,"code":"var _jsxFileName = \"/Users/girish/MOSH/React-JS/counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.state.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? 'Zero' : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/girish/MOSH/React-JS/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","render","formatCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AACA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAC;AADF,KADoB;AAAA;;AAK9BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,kBAAO,KAAKF,KAAL,CAAWC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AACDE,EAAAA,WAAW,GAAE;AACT,UAAO;AAACF,MAAAA;AAAD,QAAW,KAAKD,KAAvB;AACA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAsBA,KAA7B;AACH;;AAhB6B;;AAmBhC,eAAeF,OAAf","sourcesContent":["import React, { Component } from \"react\";\nclass Counter extends Component {\n    state = {\n        count:0,\n\n    }\n  render() {\n    return (\n      <div>\n        <span>{this.state.count}</span>\n        <button>Increment</button>\n      </div>\n    );\n  }\n  formatCount(){\n      const  {count}  = this.state;\n      return count === 0 ? 'Zero': count;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}